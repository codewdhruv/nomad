pipeline:
  name: nomad-test
  identifier: nomadtest
  projectIdentifier: DhrubaCI
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: test-ui
        identifier: testui
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: yarn install
                  identifier: yarn_install
                  spec:
                    connectorRef: dockerdelegatedhruba
                    image: alpine
                    shell: Sh
                    command: cd ui && yarn install --frozen-lockfile
              - step:
                  type: Run
                  name: save_cache
                  identifier: save_cache
                  spec:
                    connectorRef: dockerdelegatedhruba
                    image: alpine
                    shell: Sh
                    command: cd ui && yarn run lint:<+matrix.deps>
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - ./ui/node_modules
                  failureStrategies: []
                  strategy:
                    matrix:
                      deps:
                        - js
                        - hbs
                      maxConcurrency: 1
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: k8sinfra
              namespace: default
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
    - stage:
        name: build-binaries
        identifier: buildbinaries
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: checkout
                  identifier: checkout
                  spec:
                    connectorRef: dockerdelegatedhruba
                    image: alpine
                    shell: Sh
                    command: apt-get update; apt-get install -y sudo unzip zip
              - step:
                  type: Run
                  name: make deps
                  identifier: make_deps
                  spec:
                    connectorRef: dockerdelegatedhruba
                    image: alpine
                    shell: Sh
                    command: make deps
              - step:
                  type: Run
                  name: install-buf
                  identifier: installbuf
                  spec:
                    shell: Sh
                    command: sudo ./scripts/vagrant-linux-priv-buf.sh
              - step:
                  type: Run
                  name: prepare ui cache
                  identifier: prepare_ui_cache
                  spec:
                    shell: Sh
                    command: |
                      git log -n 1 --pretty=format:%H ui > /tmp/ui-sha
              - step:
                  type: Run
                  name: install-golang
                  identifier: installgolang
                  spec:
                    shell: Sh
                    command: source ${BASH_ENV} && make deps
              - step:
                  type: Run
                  name: restore compiled ui assets
                  identifier: restore_compiled_ui_assets
                  spec:
                    shell: Sh
                    command: |-
                      export GO_TAGS="ui $(grep -e '^GO_TAGS ?=' ./GNUmakefile | cut -d= -f2)"
                                  make pkg/windows_amd64.zip pkg/linux_amd64.zip
          infrastructure:
            useFromStage: testui
  variables:
    - name: OSTYPE
      type: String
      description: ""
      value: <+input>
    - name: go_machine_image
      type: String
      description: ""
      value: "&go_machine_image     ubuntu-2004:202111-02"
  properties:
    ci:
      codebase:
        connectorRef: dhrubagithubdelegateconnector
        repoName: nomad
        build: <+input>
